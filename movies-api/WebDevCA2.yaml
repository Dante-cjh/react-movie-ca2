openapi: 3.0.0
info:
  title: WebDevCA2
  contact: {}
  version: '1.0'
servers:
- url: http://localhost:8080/api
  variables: {}
paths:
  /movies/tmdb:
    get:
      tags:
      - movie
      summary: getMovies
      operationId: getMovies
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /movies/tmdb/11:
    get:
      tags:
      - movie
      summary: getMovie
      operationId: getMovie
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /movies/tmdb/genres:
    get:
      tags:
      - movie
      summary: getGenres
      operationId: getGenres
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /movies/tmdb/upcoming:
    get:
      tags:
      - movie
      summary: getUpcoming
      operationId: getUpcoming
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /movies/tmdb/{id}/reviews:
    get:
      tags:
      - movie
      summary: movieReviews
      operationId: movieReviews
      parameters:
      - name: id
        in: path
        description: The movie id
        required: true
        style: simple
        schema:
          type: integer
          format: int32
          example: 22
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /movies/tmdb/trendingMovie:
    get:
      tags:
      - movie
      summary: trendingMovie
      operationId: trendingMovie
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /movies/tmdb/{id}/credits:
    get:
      tags:
      - movie
      summary: movieCredits
      operationId: movieCredits
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: integer
          format: int32
          example: 22
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /actors/tmdb:
    get:
      tags:
      - actor
      summary: getActors
      operationId: getActors
      parameters:
      - name: page
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /actors/tmdb/{id}:
    get:
      tags:
      - actor
      summary: getActor
      operationId: getActor
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: integer
          format: int32
          example: 32131
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /actors/tmdb/{id}/credits:
    get:
      tags:
      - actor
      summary: actorCredits
      operationId: actorCredits
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: integer
          format: int32
          example: 33434
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users:
    get:
      tags:
      - user
      summary: getUsers
      operationId: getUsers
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    post:
      tags:
      - user
      summary: register
      operationId: register
      parameters:
      - name: action
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: register
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/registerrequest'
              - example:
                  username: cjh
                  password: '!cjh123456'
            example:
              username: cjh
              password: '!cjh123456'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users/{id}:
    put:
      tags:
      - user
      summary: updateUser
      operationId: updateUser
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: 6584ea35a0ef5dfd4f376ff3
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/updateUserRequest'
              - example:
                  username: CJH
                  password: '!cjh123456'
            example:
              username: CJH
              password: '!cjh123456'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users/{username}/movies:
    get:
      tags:
      - user
      summary: getFavoriteMovie
      operationId: getFavoriteMovie
      parameters:
      - name: username
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: user1
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users/movies:
    post:
      tags:
      - user
      summary: addFavoriteMovies
      operationId: addFavoriteMovies
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/addFavoriteMoviesRequest'
              - example:
                  username: CJH
                  movieId: 66
            example:
              username: CJH
              movieId: 66
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
      - user
      summary: deleteFavoriteMovies
      operationId: deleteFavoriteMovies
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users/{username}/actors:
    get:
      tags:
      - user
      summary: getFavoriteActors
      operationId: getFavoriteActors
      parameters:
      - name: username
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: CJH
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users/actors:
    post:
      tags:
      - user
      summary: addFavoriteActors
      operationId: addFavoriteActors
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/addFavoriteActorsRequest'
              - example:
                  username: CJH
                  actorId: '123231'
            example:
              username: CJH
              actorId: '123231'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
      - user
      summary: deleteFavoriteActors
      operationId: deleteFavoriteActors
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users/{username}/toWatch:
    get:
      tags:
      - user
      summary: getMustWatch
      operationId: getMustWatch
      parameters:
      - name: username
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: CJH
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users/toWatch:
    post:
      tags:
      - user
      summary: addMustWatch
      operationId: addMustWatch
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/addMustWatchRequest'
              - example:
                  username: CJH
                  movieId: '123'
            example:
              username: CJH
              movieId: '123'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
      - user
      summary: deleteMustWatch
      operationId: deleteMustWatch
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /reviews/{movieId}:
    get:
      tags:
      - reviews
      summary: getReviews
      operationId: getReviews
      parameters:
      - name: movieId
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: integer
          format: int32
          example: 1
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /reviews/review:
    post:
      tags:
      - reviews
      summary: addReviews
      operationId: addReviews
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/addReviewsRequest'
              - example:
                  id: '321332'
                  movieId: '1'
                  author: user1
                  content: 'I love cjh, the movie is very good. I recommand all of my friends to '
                  rating: '3'
            example:
              id: '321332'
              movieId: '1'
              author: user1
              content: 'I love cjh, the movie is very good. I recommand all of my friends to '
              rating: '3'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
      - reviews
      summary: delReviews
      operationId: delReviews
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /reviews/{author}/reviews:
    get:
      tags:
      - reviews
      summary: getMyReviews
      operationId: getMyReviews
      parameters:
      - name: author
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: user1
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    registerrequest:
      title: registerrequest
      required:
      - username
      - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      example:
        username: cjh
        password: '!cjh123456'
    authenticateUserRequest:
      title: authenticateUserRequest
      required:
      - username
      - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      example:
        username: cjh
        password: '!cjh123456'
    updateUserRequest:
      title: updateUserRequest
      required:
      - username
      - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      example:
        username: CJH
        password: '!cjh123456'
    addFavoriteMoviesRequest:
      title: addFavoriteMoviesRequest
      required:
      - username
      - movieId
      type: object
      properties:
        username:
          type: string
        movieId:
          type: integer
          format: int32
      example:
        username: CJH
        movieId: 66
    deleteFavoriteMoviesRequest:
      title: deleteFavoriteMoviesRequest
      required:
      - username
      - movieId
      type: object
      properties:
        username:
          type: string
        movieId:
          type: string
      example:
        username: CJH
        movieId: '66'
    addFavoriteActorsRequest:
      title: addFavoriteActorsRequest
      required:
      - username
      - actorId
      type: object
      properties:
        username:
          type: string
        actorId:
          type: string
      example:
        username: CJH
        actorId: '123231'
    deleteFavoriteActorsRequest:
      title: deleteFavoriteActorsRequest
      required:
      - username
      - actorId
      type: object
      properties:
        username:
          type: string
        actorId:
          type: string
      example:
        username: CJH
        actorId: '123456'
    addMustWatchRequest:
      title: addMustWatchRequest
      required:
      - username
      - movieId
      type: object
      properties:
        username:
          type: string
        movieId:
          type: string
      example:
        username: CJH
        movieId: '123'
    deleteMustWatchRequest:
      title: deleteMustWatchRequest
      required:
      - username
      - movieId
      type: object
      properties:
        username:
          type: string
        movieId:
          type: integer
          format: int32
      example:
        username: CJH
        movieId: 123
    addReviewsRequest:
      title: addReviewsRequest
      required:
      - id
      - movieId
      - author
      - content
      - rating
      type: object
      properties:
        id:
          type: string
        movieId:
          type: string
        author:
          type: string
        content:
          type: string
        rating:
          type: string
      example:
        id: '321332'
        movieId: '1'
        author: user1
        content: 'I love cjh, the movie is very good. I recommand all of my friends to '
        rating: '3'
    delReviewsRequest:
      title: delReviewsRequest
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int32
      example:
        id: 321332
tags:
- name: movie
- name: actor
- name: user
- name: reviews
